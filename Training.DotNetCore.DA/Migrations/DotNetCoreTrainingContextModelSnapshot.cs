// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training.DotNetCore.DA;

namespace Training.DotNetCore.DA.Migrations
{
    [DbContext(typeof(DotNetCoreTrainingContext))]
    partial class DotNetCoreTrainingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Training.DotNetCore.DA.Model.Attendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Attendees");

                    b.HasData(
                        new { Id = 1, Name = "Test attendee" },
                        new { Id = 2, Name = "Test attendee 2" }
                    );
                });

            modelBuilder.Entity("Training.DotNetCore.DA.Model.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Trainer");

                    b.HasData(
                        new { Id = 1, Name = "Test trainer" },
                        new { Id = 2, Name = "Test trainer 2" }
                    );
                });

            modelBuilder.Entity("Training.DotNetCore.DA.Model.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("TrainerId");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Trainings");

                    b.HasData(
                        new { Id = 1, Description = "Description", EndDate = new DateTime(2018, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Test training", StartDate = new DateTime(2018, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), TrainerId = 1 },
                        new { Id = 2, Description = "Description", EndDate = new DateTime(2018, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Test training 2", StartDate = new DateTime(2018, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), TrainerId = 2 }
                    );
                });

            modelBuilder.Entity("Training.DotNetCore.DA.Model.TrainingAttendee", b =>
                {
                    b.Property<int>("TrainingId");

                    b.Property<int>("AttendeeId");

                    b.HasKey("TrainingId", "AttendeeId");

                    b.HasIndex("AttendeeId");

                    b.ToTable("TrainingAttendee");

                    b.HasData(
                        new { TrainingId = 1, AttendeeId = 1 },
                        new { TrainingId = 1, AttendeeId = 2 }
                    );
                });

            modelBuilder.Entity("Training.DotNetCore.DA.Model.Training", b =>
                {
                    b.HasOne("Training.DotNetCore.DA.Model.Trainer", "Trainer")
                        .WithMany("Trainings")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Training.DotNetCore.DA.Model.TrainingAttendee", b =>
                {
                    b.HasOne("Training.DotNetCore.DA.Model.Attendee", "Attendee")
                        .WithMany("TrainingAttendees")
                        .HasForeignKey("AttendeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Training.DotNetCore.DA.Model.Training", "Training")
                        .WithMany("TrainingAttendees")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
